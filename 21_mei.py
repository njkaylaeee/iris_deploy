# -*- coding: utf-8 -*-
"""21 Mei

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jbQSmPoMuzjDE2gcWNY3zwFLuj2pX_Da
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd

# Ganti path sesuai lokasi file kamu di Google Drive
file_path = '/content/drive/MyDrive/Iris_Dataset/Iris.csv'

# Baca dataset
df = pd.read_csv(file_path)

# Tampilkan 5 baris pertama
df.head()

# prompt: create code for splitting dataset

from sklearn.model_selection import train_test_split

# Assuming 'Species' is the target variable and other columns are features
X = df.drop('Species', axis=1)
y = df['Species']

# Split the dataset into training and testing sets (e.g., 80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

print("Original dataset shape:", df.shape)
print("Training set shape (X_train, y_train):", X_train.shape, y_train.shape)
print("Testing set shape (X_test, y_test):", X_test.shape, y_test.shape)

# prompt: create code for training using naive bayes

from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score

# Create a Gaussian Naive Bayes model
model = GaussianNB()

# Train the model
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)

print("Accuracy of Naive Bayes model:", accuracy)

# prompt: create code for training using random forest

from sklearn.ensemble import RandomForestClassifier

# Create a Random Forest model
rf_model = RandomForestClassifier(n_estimators=100, random_state=42)

# Train the model
rf_model.fit(X_train, y_train)

# Make predictions on the test set
y_pred_rf = rf_model.predict(X_test)

# Evaluate the model
accuracy_rf = accuracy_score(y_test, y_pred_rf)

print("Accuracy of Random Forest model:", accuracy_rf)